#include<stdio.h>
#include<math.h>
#include<conio.h>
#include<dos.h>
#include<graphics.h>
#include<stdlib.h>
void showptr();
void getmousepos(int *,int*,int*);
int button,x,y,x1,y1,x2,y2,s;
long double num=0,get,num1=0,result=0,ze=0;
long double addnum(long double);
long double subnum(long double);
long double sqrt_chk(long double);
long double Lon(long double );
long double power(long double );
long double Log(long double );
long double zero(long double);
long double point(long double,long double);
char opr;
long double a,b,r,i1,count,c,sq,newnum=1,d=0,chk=0,ans=0,chk1=0;
union REGS i,o;
char ar[8][5];
void calculator()
{
    cleardevice();
    char* arr[8][5]= {"Shft","alph","x^-1","","",
		      "sqrt","x^2","x^a","Log","Ln",
		      "","","","","",
		      "","","Sin","Cos","Tan"
		     };
    char* arr1[4][5]= {"7","8","9","DEL","AC",
		       "4","5","6","*","/",
		       "1","2","3","+","-",
		       "0",".","Exp","Ans","="
		      };
    setfillstyle(1,3);
    bar(236,442,447,150);
    setcolor(WHITE);
    rectangle(236,149,447,40);
    rectangle(237,148,446,41);
    rectangle(238,147,445,42);
    c=240;

    d=152;

    s=0;

    for(a=0; a<4; a++)
    {
	c=240;
	for(b=0; b<5; b++)
	{
	    setfillstyle(1,RED);
	    bar(c,d,c+35,d+30);
	    setcolor(YELLOW);
	    outtextxy(c+5,d+14,arr[a][b]);
	    c+=42;

	}
	d+=35;
    }
    d+=10;
    for(a=0; a<4; a++)
    {
	c=240;
	for(b=0; b<5; b++)
	{
	    if(a==0 &&(b==3 ||b==4))
	    {
		setfillstyle(1,YELLOW);
	    }
	    else  setfillstyle(1,BLACK);
	    bar(c,d,c+35,d+30);
	    if(a==0 &&(b==3 || b==4))
	    {
		setcolor(BLACK);
	    }
	    else
		setcolor(YELLOW);
	    outtextxy(c+10,d+14,arr1[a][b]);
	    c+=42;

	}
	d+=35;
    }

}
void main()
{
    int driver=DETECT,mode;
    char input;
    char ar[8][5]= {'S','p','i','D','A',
		    'r','x','^','L','l',
		    '1','2','3','+','-',
		    '0','.','s','c','t',
		    '7','8','9','D','A',
		    '4','5','6','*','/',
		    '1','2','3','+','-',
		    '0','.','E','a','='
		   };

    initgraph(&driver,&mode,"C:\\Turboc3\\BGI");
    calculator();
    showptr();
    num=0;
    num1=0;

    count=0;
    while(!kbhit())
    {

	outtextxy(30,20,"Press any key to exit..");

	i1=0;

	c=240;

	d=152;

	rectangle(0,0,638,478);

	getmousepos(&button,&x,&y);

	for(a=0; a<9; a++)

	{

	    c=240;

	    for(b=0; b<5; b++)

	    {

		if((x>=c&&x<=c+35)&&(y>=d&&y<=d+30))

		{

		    if((button&1)==1)
		    {

			delay(150);
			input=ar[a][b];
			switch(input)
			{
			case 'l':

			    get=Lon(get);
			    num=get;
				gotoxy(35,9);
				printf("%18.10Lf",get);

			    break;
			case 'L':
			     get=Log(get);
			    num=get;

				gotoxy(35,9);
				printf("%18.10Lf",get);

			    break;
			 case 'i':
			get=1/get;
			    num=get;
				gotoxy(35,9);
				printf("%18.10Lf",get);

			break;
			case 's':
			    get*=3.1416;
			    get/=180;
			    get=sin(get);
			    num=get;
			    if(get==1.0 || get==-1.0 || get==0.0)
			    {
				gotoxy(35,9);
				printf("%18.0Lf",num);
			    }
			    else
			    {
				gotoxy(35,9);
				printf("%18.5Lf",num);
			    }
			    break;
			case 'c':
			    get*=3.1416;
			    get/=180;
			    get=cos(get);
			    num=get;
			    if(num==1 || num==-1 || num==0)
			    {
				gotoxy(35,9);

				printf("%18.0Lf",get);
			    }
			    else
			    {
				gotoxy(35,9);
				printf("%18.5Lf",get);
			    }
			    break;
			case 't':
			    get*=3.1416;
			    get/=180;
			    get=tan(get);
			    num=get;
			    if(num==1 || num==-1 || num==0)
			    {
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    else
			    {
				gotoxy(35,9);
				printf("%18.5Lf",get);
			    }
			    break;
			case 'x':
			    get=get*get;
			    num=get;
			    if(chk>=1)
			    {
				get=point(1,chk);
				gotoxy(35,9);
				printf("%18.10Lf",get);
				chk++;
				chk++;
			    }
			    else if(ze==1)
			    {
				get=zero(1);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }

			    else
			    {
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;
			case 'r':
			    get=sqrt(get) ;
			    chk1= sqrt_chk(get);
			    if(chk1==0)
			    {
				gotoxy(35,9);
				printf("%18.0Lf",get);
				chk++;
				chk++;
			    }
			    else if(chk1==1)
			    {
				gotoxy(35,9);
				printf("%18.10Lf",get);
			    }

			    num=get;
			     if(ze==1)
			    {
				get=zero(1);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }


			    break;
			case '1':
			    if(chk>=1)
			    {
				//	gotoxy(36,7);
				//	printf("OJ");
				get=point(1,chk);
				gotoxy(35,9);
				printf("%18.10Lf",get);
				chk++;
			    }
			    else if(ze==1)
			    {
				get=zero(1);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }

			    else
			    {
				get=addnum(1);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }

			    break;

			case '2':
			    if(chk>=1)
			    {
				get=point(2,chk);
				gotoxy(35,9);
				printf("%18.10Lf",get);
				chk++;
			    }
			    else if(ze==1)
			    {
				get=zero(2);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    else
			    {
				get=addnum(2);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;

			case '3':
			    if(chk>=1)
			    {
				get=point(3,chk);
				gotoxy(35,9);
				chk++;
				printf("%18.10Lf",get);
			    }
			    else if(ze==1)
			    {
				get=zero(3);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    else
			    {
				get=addnum(3);
				gotoxy(35,9);

				printf("%18.0Lf",get);
			    }
			    break;
			case '4':

			    if(chk>=1)
			    {
				get=point(4,chk);
				gotoxy(35,9);

				printf("%18.10Lf",get);
				chk++;
			    }
			    else if(ze==1)
			    {
				get=zero(4);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    else
			    {
				get=addnum(4);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;
			case '5':
			    if(chk>=1)
			    {

				get=point(5,chk);
				gotoxy(35,9);
				chk++;
				printf("%18.10Lf",get);
			    }
			    else if(ze==1)
			    {
				get=zero(5);
				gotoxy(35,9);
				ze=0;
				printf("%18.0Lf",get);
			    }
			    else
			    {
				get=addnum(5);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;
			case '6':
			    if(chk>=1)
			    {
				get=point(6,chk);
				chk++;
				gotoxy(35,9);
				printf("%18.10Lf",get);
			    }
			    else if(ze==1)
			    {
				get=zero(6);
				gotoxy(35,9);
				ze=0;
				printf("%18.0Lf",get);
			    }
			    else
			    {
				get=addnum(6);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;
			case '7':
			    if(chk>=1)
			    {
				get=point(7,chk);
				chk++;
				gotoxy(35,9);
				printf("%18.10Lf",get);
			    }
			    else if(ze==1)
			    {
				get=zero(7);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    else
			    {
				get=addnum(7);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;
			case '8':
			    if(chk>=1)
			    {
				get=point(8,chk);
				chk++;
				gotoxy(35,9);
				printf("%18.10Lf",get);
			    }
			    else if(ze==1)
			    {
				get=zero(8);
				ze=0;
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    else
			    {
				get=addnum(8);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;

			case '9':
			    if(chk>=1)
			    {
				get=point(9,chk);
				chk++;
				gotoxy(35,9);
				printf("%18.10Lf",get);
			    }
			    else if(ze==1)
			    {
				get=zero(9);
				gotoxy(35,9);
				printf("%18.0Lf",get);
				ze=0;
			    }
			    else
			    {
				get=addnum(9);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;
			case '0':

			    if(chk>=1)
			    {
				get=point(0,chk);
				chk++;
				gotoxy(35,9);
				printf("%18.10Lf",get);
			    }
			    else if(ze==1)
			    {
				get=zero(0);
				gotoxy(35,9);
				printf("%18.0Lf",get);
				ze=0;
			    }
			    else
			    {
				get=addnum(0);
				gotoxy(35,9);
				printf("%18.0Lf",get);
			    }
			    break;
			case '.':
			    chk=1;
			    // gotoxy(20,30);
			    // printf("FFS");
			  gotoxy(35,9);
			printf("%18.10Lf",get);
			   break;
			case '+':
			    num1+=num;
			    num=0;
			    opr='+';
			    chk=0;
			    get=0;
			    gotoxy(35,9);
			    printf("%18.0Lf",num);
			    break;

			case '-':
			    num1-=num;
			    num=0;
			    chk=0;
			    get=0;
			    opr='-';
			    gotoxy(35,9);
			    printf("%18.0Lf",num);
			    break;

			case '*':
			    num1=num;
			    num=0;
			    chk=0;
			    get=0;
			    opr='*';
			    gotoxy(35,9);
			    printf("%18.0Lf",num);
			    break;
			case '/':
			    num1=num;
			    num=0;
			    chk=0;
			    get=0;
			    opr='/';
			    gotoxy(35,9);
			    printf("%18.0Lf",num);
			    break;
			case 'A':
			    num=0;
			    num1=0;
			    get=0;
			    result=0;
			    count=0;
			    chk=0;
			    ze=0;
			    calculator();
			    // setcolor(black);
			   //
			   // bar(245,140,472,43);

			    // calculator();
			    break;
			case 'D':
			    num=subnum(num);
			    gotoxy(35,9);
			    printf("%18.0Lf",num);
			    break;
			case 'E':
			    ze=1;
			    break;
			case 'a':
			    gotoxy(35,9);
			    printf("%18.0Lf",result);
			    break;
			case '=':
			    switch(opr)
			    {
			    case '+':
				if(count<1)
				{
				    result=num+num1;
				}
				else
				{
				    result=result+num;
				}
				gotoxy(35,9);
				if(chk>=1)
				    printf("%18.10Lf",result);
				else
				    printf("%18.0Lf",result);
				count+=1;
				chk=0;
				break;

			    case '-':

				if(count<1)
				{
				    result=num1-num;
				}
				else
				{
				    result=result-num;
				}
				gotoxy(35,9);
				if(chk>=1)
				    printf("%18.10Lf",result);
				else
				    printf("%18.0Lf",result);
				count+=1;
				chk=0;
				break;
			    case '*':
				if(count<1)
				{
				    result=num1*num;
				}
				else
				{
				    result=result*num;
				}
				gotoxy(35,9);
				if(chk>=1)
				    printf("%18.10Lf",result);
				else
				    printf("%18.0Lf",result);
				count+=1;
				chk=0;
				break;

			    case '/':
				if(count<1)
				{
				    result=num1/num;
				}
				else
				{
				    result=result/num;
				}
				gotoxy(35,9);
				if(chk>=1)
				    printf("%18.10Lf",result);
				else
				    printf("%18.0Lf",result);
				count+=1;
				chk=0;
				ze=0;
				break;
			    }
			}
		    }
		}

		c+=45;
	    }

	    d+=35;
	}

    }
    getch();
}
long double addnum(long double getnum)
{
    num=num*10+getnum;
    return(num);
}
long double zero(long double getnum)
{
    long double i;
    for(i=1; i<=getnum; i++)
	num*=10;
    return (num);
}
long double subnum(long double a)
{
    a=a/10;
    long double b=floorl(a);
    return(b);
}
long double point(long double getnum,long double a)
{
    long double i;

    for(i=1; i<=a; i++)
	getnum=getnum/10;
    num=num+(getnum);
    return num;
}
long double sqrt_chk(long double a)
{
    if(a*a!=num) chk1=1;
    return chk1;

}
long double Lon(long double d)
{
	return log(d);
}

long double Log(long double d)
{
	return log10(d);
}
void showptr()
{
    i.x.ax=1;
    int86(0x33,&i,&o);
}

void getmousepos(int *button,int *x,int *y)
{
    i.x.ax=3;
    int86(0x33,&i,&o);
    *button=o.x.bx;
    *x=o.x.cx;
    *y=o.x.dx;
}
